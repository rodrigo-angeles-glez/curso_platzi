Iniciando en Git
git config --list
git config --global user.name ""
git config --global user.mail ""

git init		//Iniciando git en el Directorio
git status		//Verificar el estatus del Directorio
git add ./		//Agregando los archivos ante de hacer commit git
git commit -m "mensaje"	// commit

git  log --stat

git branch "nombre_rama"// git realiza una copia del master a la rama
git checkout "nombre rama"  // git realiza el cambio de rama

antes de realizar el merge se debe de realizar el commit en ambas ramas

git merge "master" de "rama_1" // quiere decir que va unir lo que tiene la rama_1 a lo que esta en master

git remote add origin url
git remote
git remote -v


git checkout
git -config

ing.civicsun@gmail.com
JoSoToNi6-

Algunos comandos que pueden ayudar cuando colaboren con proyectos muy grandes de github:

    git log --oneline - Te muestra el id commit y el título del commit.
    git log --decorate- Te muestra donde se encuentra el head point en el log.
    git log --stat - Explica el número de líneas que se cambiaron brevemente.
    git log -p- Explica el número de líneas que se cambiaron y te muestra que se cambió en el contenido.
    git shortlog - Indica que commits ha realizado un usuario, mostrando el usuario y el titulo de sus commits.
    git log --graph --oneline --decorate y
    git log --pretty=format:"%cn hizo un commit %h el dia %cd" - Muestra mensajes personalizados de los commits.
    git log -3 - Limitamos el número de commits.
    git log --after=“2018-1-2” ,
    git log --after=“today” y
    git log --after=“2018-1-2” --before=“today” - Commits para localizar por fechas.
    git log --author=“Name Author” - Commits realizados por autor que cumplan exactamente con el nombre.
    git log --grep=“INVIE” - Busca los commits que cumplan tal cual está escrito entre las comillas.
    git log --grep=“INVIE” –i- Busca los commits que cumplan sin importar mayúsculas o minúsculas.
    git log – index.html- Busca los commits en un archivo en específico.
    git log -S “Por contenido”- Buscar los commits con el contenido dentro del archivo.
    git log > log.txt - guardar los logs en un archivo tx